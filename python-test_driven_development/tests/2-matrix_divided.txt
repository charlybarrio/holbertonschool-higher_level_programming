def test_matrix_divided():
    # Test with a 2x2 matrix of integers and divisor of 2
    result = matrix_divided([[1, 2], [3, 4]], 2)
    assert result == [[0.5, 1.0], [1.5, 2.0]], "Expected [[0.5, 1.0], [1.5, 2.0]], but got {}".format(result)

    # Test with a 2x2 matrix of floats and divisor of 0.5
    result = matrix_divided([[1.0, 2.0], [3.0, 4.0]], 0.5)
    assert result == [[2.0, 4.0], [6.0, 8.0]], "Expected [[2.0, 4.0], [6.0, 8.0]], but got {}".format(result)

    # Test with a matrix of different row sizes
    try:
        matrix_divided([[1, 2], [3, 4, 5]], 2)
    except TypeError as e:
        assert str(e) == "Each row of the matrix must have the same size", "Unexpected error message: {}".format(e)

    # Test with a non-matrix input
    try:
        matrix_divided([1, 2, 3], 2)
    except TypeError as e:
        assert str(e) == "matrix must be a matrix (list of lists) of integers/floats", "Unexpected error message: {}".format(e)

    # Test with a matrix of non-integer/float elements
    try:
        matrix_divided([[1, 2], ["a", 4]], 2)
    except TypeError as e:
        assert str(e) == "matrix must be a matrix (list of lists) of integers/floats", "Unexpected error message: {}".format(e)

    # Test with a non-numeric divisor
    try:
        matrix_divided([[1, 2], [3, 4]], "a")
    except TypeError as e:
        assert str(e) == "div must be a number", "Unexpected error message: {}".format(e)

    # Test

